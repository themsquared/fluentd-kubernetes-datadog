
# Add hostname, service, and source for Datadog
<filter **>
 @type record_modifier
 remove_keys _dummy1_, _dummy2_
 <record>
  _dummy1_ ${if record.has_key?('kubernetes'); record['hostname'] = record['kubernetes']['host']; end; nil}        # Change if needed to map to incoming JSON, default assumes pod name (ie. ${record["host"]})
  _dummy2_ ${if record.has_key?('kubernetes'); record['ddsource'] = record['kubernetes']['container_name']; end; nil}        # Change if needed to map to incoming JSON, default assumes pod name (ie. ${record["host"]})
  #service "#{ENV['SERVICE']}"                    # Change if needed to map to incoming JSON, default assumes env var SERVICE
  #ddsource ${record["kubernetes"]["container_name"]}        # Change if needed to map to incoming JSON, default assumes env var SOURCE
 </record>
</filter>

# Log to Datadog
<match **>
 @type datadog
 @id DatadogFluentD
 flush_interval "#{ENV['FLUSH_INTERVAL']}"
 num_threads "#{ENV['NUM_THREADS']}"
 api_key "#{ENV['DD_API_KEY']}" 
 use_json true
 use_ssl true
 max_retries -1
</match>